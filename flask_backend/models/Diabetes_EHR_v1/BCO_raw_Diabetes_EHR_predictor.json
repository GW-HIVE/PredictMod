{
    "object_id": "https://biocomputeobject.org/BCO_000470/DRAFT",
    "spec_version": "https://w3id.org/ieee/ieee-2791-schema/2791object.json",
    "etag": "ba65cdeaa7f7b87de4b028940f2b22fe4e4149e8",
    "provenance_domain": {
        "name": "Diabetes_EHR_Predictor",
        "version": "1.1",
        "license": "https://spdx.org/licenses/CC-BY-4.0.html",
        "created": "2024-03-29T18:46:33",
        "modified": "2024-04-17T00:15:50",
        "derived_from": [],
        "contributors": [
            {
                "name": "Miguel Mazumder",
                "affiliation": "HIVE lab",
                "email": "mfmmazumder@gwmail.gwu.edu",
                "contribution": [
                    "createdBy"
                ],
                "orcid": ""
            },
            {
                "name": "Urnisha Bhuiyan",
                "affiliation": "HIVE lab",
                "email": "sbhuiyan28@email.gwu.edu",
                "contribution": [
                    "createdBy"
                ],
                "orcid": ""
            },
            {
                "name": "Lori Krammer",
                "affiliation": "HIVE lab",
                "email": "lorikrammer@email.gwu.edu",
                "contribution": [
                    "createdBy"
                ],
                "orcid": ""
            },
            {
                "name": "Patrick McNeely",
                "affiliation": "HIVE lab",
                "email": "pmcneely@email.gwu.edu",
                "contribution": [
                    "createdBy"
                ],
                "orcid": ""
            }
        ],
        "review": []
    },
    "usability_domain": [
        "The predictor code loads the pre-trained Decision Tree Classifier (DTC) from the .pickle file. It prompts the user to provide the file path for the single patient input data. The input data is then read from the provided Excel file. The predictor reshapes the input data to match the classifier's requirements and uses the loaded classifier to predict whether the patient is responsive or non-responsive based on the input data. The prediction result is printed to the console."
    ],
    "description_domain": {
        "pipeline_steps": [
            {
                "step_number": 1,
                "name": "Load Python Libraries",
                "description": "import joblib // used save trained ML to pickle file\nimport pandas as pd // operations on data frames",
                "version": "1.1",
                "prerequisite": [
                    {
                        "name": "joblib library",
                        "uri": {
                            "filename": "joblib 1.3.2",
                            "access_time": "2024-03-29T14:50:00.000Z",
                            "uri": "https://pypi.org/project/joblib/#downloads",
                            "sha1_checksum": ""
                        }
                    },
                    {
                        "name": "pandas library",
                        "uri": {
                            "filename": "pandas 2.2.1",
                            "access_time": "2024-03-29T14:50:00.000Z",
                            "uri": "https://pypi.org/project/pandas/",
                            "sha1_checksum": ""
                        }
                    }
                ],
                "input_list": [
                    {
                        "filename": "tmpfs",
                        "access_time": "2024-04-04T14:51:00.000Z",
                        "uri": "file:///dev/tmpfs",
                        "sha1_checksum": ""
                    }
                ],
                "output_list": [
                    {
                        "filename": "tmpfs",
                        "access_time": "2024-04-04T14:50:00.000Z",
                        "uri": "file:///dev/tmpfs",
                        "sha1_checksum": ""
                    }
                ]
            },
            {
                "step_number": 2,
                "name": "Load Trained ML model",
                "description": "Load trained Machine Learning model from pickle file to be used on single patient input data",
                "version": "1.1",
                "input_list": [
                    {
                        "filename": "Diabetes_EHR_classifier_and_features.pickle",
                        "access_time": "2024-03-29T14:50:00.000Z",
                        "uri": "flask_backend/models/Diabetes_EHR_v1/Diabetes_EHR_classifier_and_features.pickle",
                        "sha1_checksum": ""
                    }
                ],
                "output_list": [
                    {
                        "filename": "Classifier",
                        "access_time": "2024-04-04T14:50:00.000Z",
                        "uri": "https://example.com/biocompute/32ac73d1-4509-48db-85bd-3a780348001f",
                        "sha1_checksum": ""
                    }
                ]
            },
            {
                "step_number": 3,
                "name": "Apply patient data to ML model",
                "description": "- load patient data and input it to trained ML model from the diabetes_classifier.pkl file\n- Prediction of patient (0-Non-responder) (1-Responder) will be displayed on console/terminal",
                "version": "1.1",
                "input_list": [
                    {
                        "filename": "Classifier",
                        "access_time": "2024-04-04T14:49:00.000Z",
                        "uri": "https://example.com/biocompute/32ac73d1-4509-48db-85bd-3a780348001f",
                        "sha1_checksum": ""
                    },
                    {
                        "filename": "Patient_data",
                        "access_time": "2024-05-09T15:54:00.000Z",
                        "uri": "flask_backend/models/Diabetes_EHR_v1/single_patient_input.xlsx",
                        "sha1_checksum": ""
                    }
                ],
                "output_list": [
                    {
                        "filename": "tmpfs",
                        "access_time": "2024-04-04T14:51:00.000Z",
                        "uri": "file:///dev/tmpfs",
                        "sha1_checksum": ""
                    }
                ]
            }
        ],
        "keywords": [
            "machine learning",
            "python",
            "predictive intervention"
        ],
        "platform": [
            "VScode"
        ]
    },
    "parametric_domain": [],
    "io_domain": {
        "input_subdomain": [
            {
                "uri": {
                    "filename": "Diabetes_EHR_classifier_and_features.pickle",
                    "uri": "flask_backend/models/Diabetes_EHR_v1/Diabetes_EHR_classifier_and_features.pickle"
                }
            }
        ],
        "output_subdomain": [
            {
                "mediatype": "Plain Text",
                "uri": {
                    "uri": "file:///dev/tmpfs",
                    "access_time": "2024-04-16T04:00:00.000Z"
                }
            }
        ]
    },
    "execution_domain": {
        "script": [
            {
                "filename": "",
                "uri": {
                    "filename": "Diabetes_predictor.py",
                    "uri": "https://github.com/GW-HIVE/PredictMod/blob/main/flask_backend/models/Diabetes_EHR_v1/Diabetes_predictor.py"
                },
                "access_time": "",
                "sha1_checksum": ""
            }
        ],
        "script_driver": "Python",
        "software_prerequisites": [
            {
                "name": "Python",
                "version": "3.11.4",
                "uri": {
                    "filename": "python3.11.exe",
                    "uri": "https://www.python.org/downloads/release/python-3114/",
                    "access_time": "2024-03-29T14:51:00.000Z",
                    "sha1_checksum": ""
                }
            },
            {
                "name": "joblib library\t",
                "version": "1.3.2",
                "uri": {
                    "filename": "",
                    "uri": "https://pypi.org/project/joblib/",
                    "access_time": "2024-03-29T14:51:00.000Z",
                    "sha1_checksum": ""
                }
            },
            {
                "name": "pandas library",
                "version": "2.2.1",
                "uri": {
                    "filename": "",
                    "uri": "https://pypi.org/project/pandas/",
                    "access_time": "2024-03-29T14:50:00.000Z",
                    "sha1_checksum": ""
                }
            },
            {
                "name": "Diabetes_EHR_classifier_and_features",
                "version": "1.1",
                "uri": {
                    "filename": "Diabetes_EHR_classifier_and_features.pickle",
                    "uri": "flask_backend/models/Diabetes_EHR_v1/Diabetes_EHR_classifier_and_features.pickle",
                    "access_time": "2024-03-10T14:50:00.000Z",
                    "sha1_checksum": ""
                }
            }
        ],
        "external_data_endpoints": [],
        "environment_variables": {
            "Number of cores": "4",
            "Available memory": "8GB"
        }
    },
    "extension_domain": [],
    "error_domain": {
        "empirical_error": {
            "empirical_error": {
                "Mean Squared Error": "0.0684931506849315"
            }
        },
        "algorithmic_error": {
            "algorithmic_error": {
                "Error Rate": "<0.07"
            }
        }
    }
}
