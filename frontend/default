##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
	listen 80 default_server;
	listen [::]:80 default_server;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /var/www/html/;

	client_max_body_size 50M;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;

	# server_name _;

	add_header 'Access-Control-Allow-Origin' '*';

	location /predictmod {
		# include /etc/nginx/mime.types;
		add_header 'Access-Control-Allow-Origin' '*';
		# Allow Vue router to handle any 404s, rather than nginx
		try_files $uri $uri/ /predictmod/index.html?uri=$uri;
	}

	# Glory be! 
	# https://www.theserverside.com/blog/Coffee-Talk-Java-News-Stories-and-Opinions/Docker-Nginx-reverse-proxy-setup-example

	# ===== XXX ===== Support for "api" endpoint
	location /predictmod/api {
		# See SO for some explanation: https://stackoverflow.com/a/22259088
		resolver 127.0.0.11;
		set $originaddr http://middleware:8000;
		add_header 'Access-Control-Allow-Origin' '*';
		proxy_set_header Host $host;
		proxy_pass $originaddr$uri?$args;
	}
	
	# ===== XXX ===== Support for "users" endpoint
	location /predictmod/users {
		resolver 127.0.0.11;
		set $originaddr http://middleware:8000;
		add_header 'Access-Control-Allow-Origin' '*';
		proxy_set_header Host $host;
		proxy_pass $originaddr$uri;
	}

	# ===== XXX ===== Support for "admin" endpoint
	location /predictmod/admin {
		resolver 127.0.0.11;
		set $originaddr http://middleware:8000;
		add_header 'Access-Control-Allow-Origin' '*';
		proxy_set_header Host $host;
		proxy_pass $originaddr$uri;
	}
	# ================ XXX =====================

	# location /predictmod/api/ping {
	# 	add_header 'Access-Control-Allow-Origin' '*';
	# 	proxy_set_header Host $host;
	# 	proxy_pass http://middleware:8000/predictmod/api/ping;
	# }
	
	# location /predictmod/api/mg-upload {
	# 	add_header 'Access-Control-Allow-Origin' '*';
	# 	proxy_set_header Host $host;
	# 	proxy_pass http://middleware:8000/predictmod/api/mg-upload;
	# }
	
	# location /predictmod/api/ehr-upload {
	# 	add_header 'Access-Control-Allow-Origin' '*';
	# 	proxy_pass http://middleware:8000/predictmod/api/ehr-upload;
	# 	proxy_set_header Host $host;
	# }

	# location /predictmod/api/mg-sample {
	# 	add_header 'Access-Control-Allow-Origin' '*';
	# 	proxy_pass http://middleware:8000/predictmod/api/mg-sample;
	# 	proxy_set_header Host $host;
	# }

	# location /predictmod/api/ehr-sample {
	# 	# add_header 'Access-Control-Allow-Origin' 'http://middleware' 'always';
	# 	proxy_pass http://middleware:8000/predictmod/api/ehr-sample;
	# 	proxy_set_header Host $host;
	# }

	# ================= XXX ======================

	# location /predictmod/users/csrf {
	# 	add_header 'Access-Control-Allow-Origin' '*';
	# 	proxy_pass http://middleware:8000/predictmod/users/csrf;
	# 	proxy_set_header Host $host;
	# }

	# location /predictmod/users/login {
	# 	add_header 'Access-Control-Allow-Origin' '*';
	# 	proxy_pass http://middleware:8000/predictmod/users/login;
	# 	proxy_set_header Host $host;
	# }

	# location /predictmod/users/logout {
	# 	add_header 'Access-Control-Allow-Origin' '*';
	# 	proxy_pass http://middleware:8000/predictmod/users/logout;
	# 	proxy_set_header Host $host;
	# }

	# location /predictmod/users/session {
	# 	add_header 'Access-Control-Allow-Origin' '*';
	# 	proxy_pass http://middleware:8000/predictmod/users/session;
	# 	proxy_set_header Host $host;
	# }

	# location /predictmod/users/whoami {
	# 	add_header 'Access-Control-Allow-Origin' '*';
	# 	proxy_pass http://middleware:8000/predictmod/users/whoami;
	# 	proxy_set_header Host $host;
	# }

	# location /predictmod/admin {
	# 	add_header 'Access-Control-Allow-Origin' '*';
	# 	proxy_pass http://middleware:8000/predictmod/admin;
	# 	proxy_set_header Host $host;
	# }

	# pass PHP scripts to FastCGI server
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets):
	#	fastcgi_pass unix:/run/php/php7.3-fpm.sock;
	#	# With php-cgi (or other tcp sockets):
	#	fastcgi_pass 127.0.0.1:9000;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}

# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
