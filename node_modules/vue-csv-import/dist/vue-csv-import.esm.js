import e from"lodash/merge";import{reactive as a,computed as t,provide as s,renderSlot as l,inject as r,openBlock as o,createBlock as u,Fragment as n,renderList as i,toDisplayString as p,ref as m,watch as v,createVNode as d,mergeProps as c,createCommentVNode as f,withDirectives as C,vModelSelect as b,createTextVNode as g,withModifiers as h}from"vue";import V from"lodash/drop";import y from"lodash/every";import I from"lodash/forEach";import H from"lodash/get";import D from"lodash/isArray";import M from"lodash/map";import x from"lodash/set";import S from"papaparse";import k from"lodash/findKey";import w from"axios";const _={errors:{fileRequired:"A file is required",invalidMimeType:"Invalid file type"},toggleHeaders:"File has headers",submitBtn:"Submit",fieldColumn:"Field",csvColumn:"Column",requiredField:"*",excludeField:"Exclude field"};var A={props:{modelValue:Array,fields:{type:[Object,Array],required:!0},text:{default:()=>({})}},setup(l,{emit:r}){let o=a({errors:[],inputName:"csv",file:null,map:{},value:{},fields:(u=l.fields,D(u)?M(u,(e=>({key:e,label:e,required:!0}))):M(u,((e,a)=>({key:a,label:H(e,"label",e),required:H(e,"required",!0)})))),fileHasHeaders:null,csvSample:null,rawCsv:null,language:e({},_,l.text),firstSampleRow:t((()=>D(o.csvSample)&&D(o.csvSample[0])?o.csvSample[0]:null)),allFieldsAreMapped:t((()=>y(o.fields,(function(e){return void 0!==o.map[e.key]||!e.required}))))});var u;return s("VueCsvImportData",o),s("buildMappedCsv",(function(){let e=o.fileHasHeaders?o.rawCsv:V(o.rawCsv);o.value=M(e,(e=>{let a={};return I(o.map,((t,s)=>{x(a,s,H(e,t))})),a})),r("update:modelValue",o.value)})),{VueCsvImportData:o}}};A.render=function(e,a,t,s,r,o){return l(e.$slots,"default",{errors:s.VueCsvImportData.errors,fields:s.VueCsvImportData.fields,file:s.VueCsvImportData.file})},A.__file="src/components/VueCsvImport.vue";var F={name:"VueCsvFiles",setup:()=>({VueCsvImportData:r("VueCsvImportData")})};F.render=function(e,a,t,s,r,m){return l(e.$slots,"default",{errors:s.VueCsvImportData.errors.value},(()=>[(o(!0),u(n,null,i(s.VueCsvImportData.errors,(a=>(o(),u("span",e.$attrs,p(a),17)))),256))]))},F.__file="src/components/VueCsvErrors.vue";const q={"text/csv":{source:"iana",compressible:!0,extensions:["csv"]},"application/vnd.ms-excel":{source:"iana",compressible:!1,extensions:["xls","xlm","xla","xlc","xlt","xlw"]},"text/plain":{source:"iana",compressible:!0,extensions:["txt","text","conf","def","list","log","in","ini"]}};var $={name:"CsvFile",props:{name:{type:String,default:"csv"},headers:{type:[Boolean,null],default:!0},parseConfig:{type:Object,default:()=>({})},validation:{type:Boolean,default:!0},fileMimeTypes:{type:Array,default:()=>["text/csv","text/x-csv","application/vnd.ms-excel","text/plain"]}},setup(a){const t=m(null),s=r("VueCsvImportData"),l=r("buildMappedCsv"),o=s.language;s.inputName=name,s.fileHasHeaders=null!==a.headers?!!a.headers:null;const u=function(e){if(s.errors=[],e||s.errors.push(o.errors.fileRequired),a.validation){const t=""===e.type?function(e){if(!e||"string"!=typeof e)return!1;let a=e.split(".").pop();return a&&k(q,(e=>e.extensions.includes(a)))||!1}(e.name):e.type;return a.fileMimeTypes.includes(t)||s.errors.push(o.errors.invalidMimeType),0===s.errors.length}return!0};return v((()=>s.file),(t=>{t||(s.csvSample.value=null,s.rawCsv.value=null);let l=new FileReader;l.readAsText(s.file,a.parseConfig.encoding||"UTF-8"),l.onload=function(t){s.csvSample=H(S.parse(t.target.result,e({preview:10,skipEmptyLines:!0},a.parseConfig)),"data"),s.rawCsv=H(S.parse(t.target.result,e({skipEmptyLines:!0},a.parseConfig)),"data")},l.onerror=function(e){console.log(e)}}),{deep:!0}),v((()=>s.fileHasHeaders),(()=>{s.allFieldsAreMapped&&l()})),{file:s.file,change:function(){let e=t.value.files?t.value.files[0]:null;u(e)&&(s.file=e)},csvRef:t}}};$.render=function(e,a,t,s,r,o){return l(e.$slots,"default",{file:s.file,change:s.change},(()=>[d("input",c({ref:"csvRef",type:"file",onChange:a[1]||(a[1]=(...e)=>s.change&&s.change(...e)),name:t.name},e.$attrs),null,16,["name"])]))},$.__file="src/components/VueCsvInput.vue";var T={name:"CsvMap",props:{noThead:{type:Boolean,default:!1},selectAttributes:{type:Object,default:()=>({})},autoMatch:{type:Boolean,default:!0},autoMatchIgnoreCase:{type:Boolean,default:!0}},setup(e){const a=r("VueCsvImportData"),t=r("buildMappedCsv"),s=a.language;return v((()=>a.map),(function(){a.allFieldsAreMapped&&t()}),{deep:!0}),e.autoMatch&&v((()=>a.csvSample),(function(t){t&&a.fields.forEach((s=>{t[0].forEach(((t,l)=>{(e.autoMatchIgnoreCase?s.label.toLowerCase().trim():s.label.trim())===(e.autoMatchIgnoreCase?t.toLowerCase().trim():t.trim())&&(a.map[s.key]=l)}))}))})),{VueCsvImportData:a,labels:s}}};const R={key:0},E={key:0,value:null};T.render=function(e,a,t,s,r,m){return l(e.$slots,"default",{sample:s.VueCsvImportData.firstSampleRow,map:s.VueCsvImportData.map,fields:s.VueCsvImportData.fields},(()=>[s.VueCsvImportData.firstSampleRow?(o(),u("table",c({key:0},e.$attrs),[t.noThead?f("v-if",!0):(o(),u("thead",R,[d("tr",null,[d("th",null,p(s.labels.fieldColumn),1),d("th",null,p(s.labels.csvColumn),1)])])),d("tbody",null,[(o(!0),u(n,null,i(s.VueCsvImportData.fields,((e,a)=>(o(),u("tr",{key:a},[d("td",null,p(e.label),1),d("td",null,[C(d("select",c(t.selectAttributes,{name:`csv_uploader_map_${a}`,"onUpdate:modelValue":a=>s.VueCsvImportData.map[e.key]=a}),[e.required?f("v-if",!0):(o(),u("option",E,"Â ")),(o(!0),u(n,null,i(s.VueCsvImportData.firstSampleRow,((e,a)=>(o(),u("option",{key:a,value:a},p(e),9,["value"])))),128))],16,["name","onUpdate:modelValue"]),[[b,s.VueCsvImportData.map[e.key]]])])])))),128))])],16)):f("v-if",!0)]))},T.__file="src/components/VueCsvMap.vue";var B={name:"CsvTableMap",props:{tableAttributes:{type:Object,default:()=>({})},autoMatch:{type:Boolean,default:!0},autoMatchIgnoreCase:{type:Boolean,default:!0}},setup(e){const s=r("VueCsvImportData"),l=r("buildMappedCsv"),o=s.language,u=a({}),n=t((()=>s.fields.map((e=>(e.selected=Object.values(u).includes(e.label),e)))));v((()=>u),(function(){s.map={};for(const[e,a]of Object.entries(u))""!==a&&(s.map[a.toLowerCase()]=e);s.allFieldsAreMapped&&l()}),{deep:!0});const i=t((()=>s.fileHasHeaders?s.csvSample:s.csvSample.slice(1))),p=t((()=>s.fileHasHeaders?[...Array(s.firstSampleRow.length).keys()].map((e=>`${o.csvColumn} ${e}`)):s.firstSampleRow));return e.autoMatch&&v((()=>s.csvSample),(function(a){a&&s.fields.forEach((t=>{a[0].forEach(((a,s)=>{(e.autoMatchIgnoreCase?t.label.toLowerCase().trim():t.label.trim())===(e.autoMatchIgnoreCase?a.toLowerCase().trim():a.trim())&&(u[s]=t.label)}))}))})),{availableFields:n,csvMap:u,csvSample:i,headers:p,VueCsvImportData:s,labels:o}}};const j={value:""};B.render=function(e,a,t,s,r,m){return l(e.$slots,"default",{sample:s.VueCsvImportData.firstSampleRow,map:s.VueCsvImportData.map,fields:s.VueCsvImportData.fields},(()=>[s.VueCsvImportData.firstSampleRow?(o(),u("table",c({key:0},t.tableAttributes),[d("thead",null,[d("tr",null,[(o(!0),u(n,null,i(s.headers,((e,a)=>(o(),u("td",{key:e},[g(p(e)+" ",1),C(d("select",{"onUpdate:modelValue":e=>s.csvMap[a]=e,name:`csv_uploader_map_${a}`,required:""},[d("option",j,p(s.labels.excludeField),1),(o(!0),u(n,null,i(s.availableFields,(e=>(o(),u("option",{value:e.label,key:e.key,disabled:e.selected},p(e.label)+p(e.required?s.labels.requiredField:""),9,["value","disabled"])))),128)),s.VueCsvImportData.fields.map((e=>e.label)).includes(e)?f("v-if",!0):(o(),u("option",{value:e,key:e},p(e),9,["value"]))],8,["onUpdate:modelValue","name"]),[[b,s.csvMap[a]]])])))),128))])]),d("tbody",null,[(o(!0),u(n,null,i(s.csvSample,(e=>(o(),u("tr",null,[(o(!0),u(n,null,i(e,(e=>(o(),u("td",null,p(e),1)))),256))])))),256))])],16)):f("v-if",!0)]))},B.__file="src/components/VueCsvTableMap.vue";var L={name:"VueCsvImportSubmit",props:{url:{type:String,required:!0},config:{type:Object,required:!1,default:{}}},setup(e){const a=r("VueCsvImportData"),t=r("buildMappedCsv"),s=a.language;return{submit:function(){t(),w.post(e.url,{[a.inputName]:a.value},e.config).then((e=>{emit("send-success",e)})).catch((e=>{emit("send-error",e)})).finally((e=>{emit("send-complete",e)}))},VueCsvImportData:a,labels:s}}};L.render=function(e,a,t,s,r,o){return l(e.$slots,"submit",{submit:s.submit,mappedCsv:s.VueCsvImportData.value},(()=>[d("button",c({type:"submit"},e.$attrs,{onClick:a[1]||(a[1]=h(((...e)=>s.submit&&s.submit(...e)),["prevent"]))}),p(s.labels.submitBtn),17)]))},L.__file="src/components/VueCsvSubmit.vue";var O={name:"ToggleHasHeaders",props:{labelAttributes:{},checkboxAttributes:{}},setup(){const e=r("VueCsvImportData"),a=e.language;return{VueCsvImportData:e,toggleHasHeaders:function(){e.fileHasHeaders=!e.fileHasHeaders},labels:a}}};O.render=function(e,a,t,s,r,o){return l(e.$slots,"default",{hasHeaders:s.VueCsvImportData.fileHasHeaders,toggle:s.toggleHasHeaders},(()=>[d("label",t.labelAttributes,[d("input",c({type:"checkbox"},t.checkboxAttributes,{value:s.VueCsvImportData.fileHasHeaders,onChange:a[1]||(a[1]=(...e)=>s.toggleHasHeaders&&s.toggleHasHeaders(...e))}),null,16,["value"]),g(" "+p(s.labels.toggleHeaders),1)],16)]))},O.__file="src/components/VueCsvToggleHeaders.vue";const U={install(a,t){t=e({components:{"vue-csv-import":"vue-csv-import","vue-csv-errors":"vue-csv-errors","vue-csv-input":"vue-csv-input","vue-csv-map":"vue-csv-map","vue-csv-table-map":"vue-csv-table-map","vue-csv-submit":"vue-csv-submit","vue-csv-toggle-headers":"vue-csv-toggle-headers"}},t),a.component(t.components["vue-csv-import"],A),a.component(t.components["vue-csv-errors"],F),a.component(t.components["vue-csv-input"],$),a.component(t.components["vue-csv-map"],T),a.component(t.components["vue-csv-table-map"],B),a.component(t.components["vue-csv-submit"],L),a.component(t.components["vue-csv-toggle-headers"],O)}};export{F as VueCsvErrors,A as VueCsvImport,U as VueCsvImportPlugin,$ as VueCsvInput,T as VueCsvMap,L as VueCsvSubmit,B as VueCsvTableMap,O as VueCsvToggleHeaders};
